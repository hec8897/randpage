function getQueryString() {
  params = {};
  window.location.search.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (str, key, value) {
    params[key] = value;
  });
  return params;
}

var popupData = [{
  "no": "0",
  "question": "당신의 직업군은 무엇입니까?",
  "answer": [{
    "qa": "개인사업, 자영업",
    "point": 0
  }, {
    "qa": "직장인, 근로소득자",
    "point": 0
  }, {
    "qa": "전문직, 프리랜서",
    "point": 0
  }]
}, {
  "no": "1",
  "question": "당신의 연간 총소득은 얼마인가요?",
  "answer": [{
    "qa": "1천~3천만원",
    "point": 1
  }, {
    "qa": "3천~6천만원",
    "point": 2
  }, {
    "qa": "6천~9천만원",
    "point": 3
  }, {
    "qa": "1억이상",
    "point": 4
  }]
}, {
  "no": "2",
  "question": "당신은 얼마 정도의 대출을 받고 있나요?",
  "answer": [{
    "qa": "1천만원 이하",
    "point": 4
  }, {
    "qa": "3천만원 이하",
    "point": 3
  }, {
    "qa": "5천만 원 이하",
    "point": 2
  }, {
    "qa": "1억이상",
    "point": 1
  }]
}, {
  "no": "3",
  "question": "비상시를 대비하여 두 달 생활비 정도의 자금이 통장에 있나요?",
  "answer": [{
    "qa": "예",
    "point": 4
  }, {
    "qa": "아니요",
    "point": 1
  }]
}, {
  "no": "4",
  "question": "당신은 갑작스러운 상해, 질병, 사고, 사망 등에 대비해 보장성 보험에 가입했나요?",
  "answer": [{
    "qa": "예",
    "point": 4
  }, {
    "qa": "아니요",
    "point": 1
  }]
}, {
  "no": "5",
  "question": "매월 정기적으로 발생하는 생활비, 이자, 보험료 등이 얼마인지 정확하게 알고 있나요?",
  "answer": [{
    "qa": "예",
    "point": 4
  }, {
    "qa": "아니요",
    "point": 1
  }]
}, {
  "no": "6",
  "question": "월 소득대비 당신의 저축률은 어느 정도 되시나요?",
  "answer": [{
    "qa": "10% 이하",
    "point": 1
  }, {
    "qa": "20% 이하",
    "point": 2
  }, {
    "qa": "30% 이하",
    "point": 3
  }, {
    "qa": "50% 이상",
    "point": 4
  }]
}, {
  "no": "7",
  "question": "당신은 주로 어떤 방법으로 재테크를 하고 계신가요?",
  "answer": [{
    "qa": "예적금",
    "point": 0
  }, {
    "qa": "주식, 펀드",
    "point": 0
  }, {
    "qa": "MMA, CMA",
    "point": 0
  }, {
    "qa": "채권, 선물옵션",
    "point": 0
  }]
}, {
  "no": "8",
  "question": "당신의 성별은?",
  "answer": [{
    "qa": "남성",
    "point": 0
  }, {
    "qa": "여성",
    "point": 0
  }]
}, {
  "no": "9",
  "question": "당신의 연령대는 ?",
  "answer": [{
    "qa": "20",
    "point": 0
  }, {
    "qa": "30",
    "point": 0
  }, {
    "qa": "40",
    "point": 0
  }, {
    "qa": "50",
    "point": 0
  }]
}];

String.prototype.replaceAll = function (org, dest) {
  //array fillter prototype
  return this.split(org).join(dest);
};

var Popup = {
  PopupHtml: document.getElementById('popover'),
  PopupOpen: function PopupOpen() {
    this.PopupHtml.className = 'popover';
    this.PopupRender(0);
  },
  PopupClose: function PopupClose() {
    this.PopupHtml.className = 'dp_none';
    var Panel = document.getElementById('panel');
    Panel.innerHTML = "";
    this.answerDataArray = [];
    this.QuestionIndex = 0;
  },
  QuestionIndex: 0,
  UpdateTableData: [],
  answerDataArray: [],
  PopupRender: function PopupRender(QuestionIndex) {
    var Panel = document.getElementById('panel');
    var Buttons = [];

    if (popupData[QuestionIndex].no == "9") {
      for (var i = 0; i < popupData[QuestionIndex].answer.length; i++) {
        Buttons.push("<button value='".concat(popupData[QuestionIndex].answer[i].qa, "' onclick='Popup.AnswerDataSave(this.value)'>").concat(popupData[QuestionIndex].answer[i].qa, "\uB300</button>"));
      }
    } else {
      for (var _i = 0; _i < popupData[QuestionIndex].answer.length; _i++) {
        Buttons.push("<button value='".concat(popupData[QuestionIndex].answer[_i].qa, "' onclick='Popup.AnswerDataSave(this.value)'>").concat(popupData[QuestionIndex].answer[_i].qa, "</button>"));
      }
    }

    ButtonRender = Buttons.toString().replaceAll(",", "");
    Panel.innerHTML = "<div>\n                                <span class=\"st_cat step_".concat(QuestionIndex + 1, "\"></span>\n                                <h3>").concat(QuestionIndex + 1, ". ").concat(popupData[QuestionIndex].question, "</h3>\n                                <div>\n                                    ").concat(ButtonRender, "\n                                </div>\n                            </div>");
  },
  AnswerDataSave: function AnswerDataSave(thisValue) {
    if (this.QuestionIndex < popupData.length - 1) {
      this.answerDataArray.push(thisValue);
      this.PopupRender(this.QuestionIndex + 1);
      this.QuestionIndex += 1;
    } else {
      this.answerDataArray.push(thisValue);
      var targetTable = returnInsert.result[0];
      UpdateSurvey(this.answerDataArray, targetTable);
    }
  },
  PrevAnswer: function PrevAnswer() {
    if (this.QuestionIndex > 0) {
      this.PopupRender(this.QuestionIndex - 1);
      this.answerDataArray.pop();
      this.QuestionIndex -= 1;
    }
  },
  ResultRender: function ResultRender() {
    var Panel = document.getElementById('popover');
    Panel.innerHTML = "<div class=\"con con5\">\n                            <div class=\"tits\">\n                                <span class=\"tblue\">\uBB34\uB8CC \uC7AC\uBB34\uC0C1\uB2F4 \uC2E0\uCCAD\uC774 \uC644\uB8CC\uB418\uC5C8\uC2B5\uB2C8\uB2E4.</span>\n                            </div>\n                            <div class=\"obj\">\n                                <div class=\"obj_1\"><img src=\"images/obj_1.png\" alt=\"object img\"></div>\n                                <div class=\"obj_2\"><img src=\"images/obj_2.png\" alt=\"object img\"></div>\n                                <div class=\"obj_3\"><img src=\"images/obj_3.png\" alt=\"object img\"></div>\n                            </div>\n                            <a href=\"javascript:\" class=\"b_close\" onclick=\"Popup.PopupClose()\"><img src=\"images/close.gif\" alt=\"close\"></a>\n                            <div class=\"panel result\">\n                                <div>\n                                    <img src=\"images/img_smile.png\" alt=\"smile\">\n                                    <p>\n                                        \uBE60\uB978 \uC2DC\uAC04 \uB0B4\uC5D0 \uC804\uBB38 \uC0C1\uB2F4\uC0AC\uB97C \uBC30\uC815\uD558\uC5EC \uC804\uD654\uB4DC\uB9B4 \uC218 \uC788\uB3C4\uB85D \uD558\uACA0\uC2B5\uB2C8\uB2E4.<br>\n                                        \uD55C\uC2DC\uC801\uC73C\uB85C \uC6B4\uC601\uB418\uB294 \uBB34\uB8CC \uC0C1\uB2F4 \uC11C\uBE44\uC2A4\uC778 \uB9CC\uD07C \uC801\uADF9\uC801\uC778 \uB2F5\uBCC0\uACFC \uC7AC\uBB34\uAD00\uB9AC\uC5D0 \uAD00\uD55C<br>\n                                        \uB2E4\uC591\uD55C \uC9C8\uBB38\uC744 \uC900\uBE44\uD574\uB450\uC2DC\uBA74 \uB354\uC6B1 \uBC1C\uC804\uC801\uC778 \uC2DC\uAC04\uC774 \uB420 \uAC83\uC785\uB2C8\uB2E4.<br>\n                                        <br>\n                                        2020\uB144\uB3C4\uC758 \uC131\uACF5\uC801\uC778 \uC7AC\uD14C\uD06C\uB97C \uAE30\uC6D0\uD569\uB2C8\uB2E4.\n                                    </p>\n                                </div>\n                            </div>\n                            <div class=\"btn\" onclick='Popup.PopupClose()'>\n                                <span>\uCC3D\uB2EB\uAE30</span>\n                            </div>\n                        </div>";
  }
};

function PrivacyInsertData(mode) {
  if (mode == "fast") {
    var reqName = document.getElementById('fast_name');
    var reqPhone = document.getElementById('fast_phone');
    var reqMemo = document.getElementById('fast_memo');
    var Check = document.getElementById('checkbox_1');

    if (reqName.value == "") {
      alert('성함을 입력해주세요');
    } else if (reqPhone.value == "") {
      alert('연락처를 입력해주세요');
    } else if (reqMemo.value == "") {
      alert('상담분야를 선택해주세요');
    } else if (Check.checked == false) {
      alert('개인정보 수집 및 이용에 동의 해주세요');
    } else {
      getQueryString();
      data = [{
        IdKey: params.idkey,
        reqAd: params.id,
        mode: mode,
        reqName: reqName.value,
        reqPhone: reqPhone.value,
        reqMemo: reqMemo.value
      }];
      DataInsert(data); // Popup.PopupOpen()
    }
  } else {
    var _reqName = document.getElementById('reqname');

    var _reqPhone = document.getElementById('reqphone');

    var _reqMemo = document.getElementById('reqmemo');

    var _Check = document.getElementById('checkbox_2');

    if (_reqName.value == "") {
      alert('성함을 입력해주세요');
    } else if (_reqPhone.value == "") {
      alert('연락처를 입력해주세요');
    } else if (_reqMemo.value == "") {
      alert('상담분야를 선택해주세요');
    } else if (_Check.checked == false) {
      alert('개인정보 수집 및 이용에 동의 해주세요');
    } else {
      getQueryString();
      data = [{
        IdKey: params.idkey,
        reqAd: params.id,
        mode: mode,
        reqName: _reqName.value,
        reqPhone: _reqPhone.value,
        reqMemo: _reqMemo.value
      }];
      DataInsert(data);
    }
  }
}

function privacyView(mode) {
  if (mode == 'top') {
    var Privacy = document.getElementById('privacy_top');
    Privacy.className = 'p_box';
  } else {
    var _Privacy = document.getElementById('privacy_bottom');

    _Privacy.className = 'p_box';
  }
}

function DataInsert(data) {
  var xhttp = new XMLHttpRequest();

  xhttp.onreadystatechange = function () {
    if (this.readyState == 4 && this.status == 200) {
      returnInsert = JSON.parse(this.responseText);

      if (returnInsert.phpresult == 'ok') {
        alert('무료 재무 상담을 신청해주셔서 감사합니다. 재무설계에 필요한 몇가지 질문에 답해주시면 더욱 알차고 유익한 상담이 됩니다. (1분 소요) ');
        Popup.PopupOpen();
      } else {
        alert('상담신청 실패 관리자에게 문의해주세요');
      }
    }
  };

  xhttp.open('POST', 'php/insert.php', true);
  xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
  xhttp.send("data=" + JSON.stringify(data));
}

function UpdateSurvey(QaData, data) {
  var Data = [{
    mode: "update",
    reqName: data.reqName,
    reqPhone: data.reqPhone,
    reqMemo: data.reqMemo
  }, QaData];
  UpdateInsert(Data);
}

function UpdateInsert(data) {
  var xhttp = new XMLHttpRequest();

  xhttp.onreadystatechange = function () {
    if (this.readyState == 4 && this.status == 200) {
      returnInsert = JSON.parse(this.responseText);

      if (returnInsert.phpresult == 'ok') {
        Popup.ResultRender();
      } else {
        alert('상담신청 실패 관리자에게 문의해주세요');
      }
    }
  };

  xhttp.open('POST', 'php/insert.php', true);
  xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
  xhttp.send("data=" + JSON.stringify(data));
}